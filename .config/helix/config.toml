theme = "everforest_dark"

[editor]
line-number = "relative"
color-modes = true
jump-label-alphabet = "jfkdls,aieownvmghtybqpx.z"
cursorline = true

[editor.whitespace.render]
newline = "all"

[editor.statusline]
left = ["mode", "spinner", "version-control"]
center = ["file-name", "read-only-indicator", "file-modification-indicator"]#, "file-type"]
right = ["diagnostics", "selections", "register", "position", "position-percentage", "file-encoding"]

[editor.lsp]
# display-inlay-hints = true
auto-signature-help = false

# [editor.cursor-shape]
# insert = "bar"
# select = "underline"

[editor.file-picker]
hidden = false

[keys.normal]
"esc" = ["collapse_selection", "keep_primary_selection"]
C-c = ["collapse_selection", "keep_primary_selection"]
# workaround, makes Ctrl-/ working
C-7 = "toggle_comments"
H = "extend_to_line_start"
L = "extend_to_line_end"
x = "extend_line"

[keys.normal.f]
label = "Find"
f = "goto_word"
h = "find_prev_char"
j = "till_prev_char"
k = "find_till_char"
l = "find_next_char"

[keys.normal."]"]
g = {label = "Goto next change", command = ["goto_next_change", "ensure_selections_forward", "flip_selections"]}
G = {label = "Goto last change", command = ["goto_last_change", "ensure_selections_forward", "flip_selections"]}
f = {label = "Goto next function", command = ["goto_next_function", "ensure_selections_forward", "flip_selections"]}
t = {label = "Goto next type definition", command = ["goto_next_class", "ensure_selections_forward", "flip_selections"]}
T = {label = "Goto next test", command = ["goto_next_test", "ensure_selections_forward", "flip_selections"]}

[keys.select]
H = "extend_to_line_start"
L = "extend_to_line_end"
x = "extend_line"

[keys.select.f]
label = "Find"
f = "goto_word"
h = "extend_prev_char"
j = "extend_till_prev_char"
k = "extend_till_char"
l = "extend_next_char"

# [keys.select."]"]
# g = {label = "Goto next change", command = ["goto_next_change", "ensure_selections_forward", "flip_selections"]}
# G = {label = "Goto last change", command = ["goto_last_change", "ensure_selections_forward", "flip_selections"]}
# f = {label = "Goto next function", command = ["goto_next_function", "ensure_selections_forward", "flip_selections"]}
# t = {label = "Goto next type definition", command = ["goto_next_class", "ensure_selections_forward", "flip_selections"]}
# T = {label = "Goto next test", command = ["goto_next_test", "ensure_selections_forward", "flip_selections"]}

# integrations with external tools via Tmux
[keys.normal."C-e"]
label = "External tools"
g = { label = "Open lazygit", command = ":run-shell-command tmux split-pane -l 75% lazygit -w $(git rev-parse --show-toplevel)" }
e = { label = "Select files with lf", command = ":run-shell-command helix_pid=\"$(ps -o ppid= $$)\" ~/.config/helix/hxlf" }
A-e = { label = "Open files selected with lf", command = [":new", ":insert-output cat ~/.cache/hxlf/selected", "split_selection_on_newline", "goto_file", "goto_last_modified_file", ":buffer-close!"] }

[keys.select."C-e"]
label = "External tools"
g = { label = "Open lazygit", command = ":run-shell-command tmux split-pane -l 75% lazygit -w $(git rev-parse --show-toplevel)" }
e = { label = "Select files with lf", command = ":run-shell-command helix_pid=\"$(ps -o ppid= $$)\" ~/.config/helix/hxlf" }
A-e = { label = "Open files selected with lf", command = [":new", ":insert-output cat ~/.cache/hxlf/selected", "split_selection_on_newline", "goto_file", "goto_last_modified_file", ":buffer-close!"] }

[keys.insert]
C-c = "normal_mode"
"A-\"" = {label = "", command = ["collapse_selection", ":insert-output printf \"\\\"\\\"\""]}
"A-'" = {label = "", command = ["collapse_selection", ":insert-output printf \"''\""]}
# TESTS
# sticky mode
# X = "extend_line" # both directions!
# [keys.normal."'"]
# h = { label = "Go left with macro", command = ["move_char_left", "@'"] }

