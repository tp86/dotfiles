#|
https://jaroslaw-weber.github.io/keyfab/share?id=7tqsse1cuqqilj

Note that standard layout has single space bar which should handle 3 keys in kanata.
|#

(defsrc

	q w e r t y u i o p
	a s d f g h j k l ;
	z x c v b n m , . /
	   lalt spc ralt

	;; forcefully hide following keys
	esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
	grv 1 2 3 4 5 6 7 8 9 0 - = bspc
	tab [ ] \
	caps ' ret
	lsft rsft
	lctl lmet rmet rctl
)

;; empty pass-through layout template
#|
	_ _ _ _ _ _ _ _ _ _
	_ _ _ _ _ _ _ _ _ _
	_ _ _ _ _ _ _ _ _ _
           _ _ _

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
|#

(defvar

	tap-time 200
	hold-time 200
)

(deflayer letters

	   _      _      _      _   _ _    _      _      _      _
	@a-mod @s-mod @d-mod @f-mod _ _ @j-mod @k-mod @l-mod @bspc-mod
	   _      _      _      _   _ _    _      ,      .     ret
					  @tab-num @spc  @sym

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(deflayer spc
	_ _ _ _ _ _ _ _ _ _
	_ _ _ _ _ _ _ _ _ _
	_ _ _ _ _ _ _ _ _ _
    @esc-nav _ @fn

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(deflayer ralt

	   _      _   @e-alt _ _    _   _ _ @o-alt _
	@a-alt @s-alt    _   _ _    _   _ _ @l-alt _
	@z-alt @x-alt @c-alt _ _ @n-alt _ _    _   _
                        _ _ _

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(deflayer num

	 XX   XX   XX   XX  XX     S-8 - 7 8 9
	lmet lsft lalt lctl XX     S-= = 4 5 6
	 XX   XX   XX   XX  XX      /  0 1 2 3
                        _ spc @sym

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(deflayer nav

	 XX   XX   XX   XX  XX     @uh  S-9  [   S-0   ]
	lmet lsft lalt lctl XX     left down up  rght tab
	 XX   XX   XX   XX  XX     @de  S-[  S-, S-]  S-.
                        _ spc @sym

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(deflayer sym

	S-` S-5 S-1 S-/ S-4 XX  XX   XX   XX   XX
	 `  S-3 S--  '  S-' XX rctl lalt rsft rmet
	S-2 S-6 S-7 S-\  \  XX  XX   XX   XX   XX
                @tab-num _ _

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(deflayer fn

	f1 f2  f3  f4  ins XX  XX   XX   XX   XX
	f5 f6  f7  f8  del XX rctl lalt rsft rmet
	f9 f10 f11 f12 XX  XX  XX   XX   XX   XX
             @tab-num _ _

	XX XX XX XX XX XX XX XX XX XX XX XX XX 
	XX XX XX XX XX XX XX XX XX XX XX XX XX XX
	XX XX XX XX
	XX XX XX
	XX XX
	XX XX XX XX
)

(defoverrides ;; key overrides (vial)

	;; (;) (lsft ;)
	;; (lsft ;) (;)

	(lsft ,) (;)
	(rsft ,) (;)
	(lsft .) (lsft ;)
	(rsft .) (lsft ;)

	(lalt ralt e) (ralt e)
	(lalt ralt o) (ralt o)
	(lalt ralt a) (ralt a)
	(lalt ralt s) (ralt s)
	(lalt ralt l) (ralt l)
	(lalt ralt z) (ralt z)
	(lalt ralt x) (ralt x)
	(lalt ralt c) (ralt c)
	(lalt ralt n) (ralt n)
)

(defalias

	a-mod (tap-hold $tap-time $hold-time a lmet) ;; MT()
	s-mod (tap-hold $tap-time $hold-time s lsft)
	d-mod (tap-hold $tap-time $hold-time d lalt)
	f-mod (tap-hold $tap-time $hold-time f lctl)
	j-mod (tap-hold $tap-time $hold-time j rctl)
	k-mod (tap-hold $tap-time $hold-time k (multi (layer-toggle ralt) lalt)) ;; LM(), Tap Dance (vial)
	l-mod (tap-hold $tap-time $hold-time l rsft)
	bspc-mod (tap-hold $tap-time $hold-time bspc rmet)
	colons ;
	spc (tap-hold $tap-time $hold-time spc (layer-toggle spc))
	tab-num (tap-hold $tap-time $hold-time tab (layer-toggle num))
	esc-nav (tap-hold $tap-time $hold-time esc (layer-toggle nav))
	ret-sym (tap-hold $tap-time $hold-time ret (layer-toggle sym))
	ret-fn (tap-hold $tap-time $hold-time ret (layer-toggle fn))
	sym (layer-toggle sym)
	fn (layer-toggle fn)
	
	e-alt (tap-hold $tap-time $hold-time RA-e A-e) ;; Tap Dance (vial)
	o-alt RA-o
	a-alt (tap-hold $tap-time $hold-time RA-a lmet)
	s-alt (tap-hold $tap-time $hold-time RA-s lsft)
	l-alt (tap-hold $tap-time $hold-time RA-l rsft)
	z-alt RA-z
	x-alt RA-x
	c-alt (tap-hold $tap-time $hold-time RA-c A-c)
	n-alt RA-n

	uh (tap-hold $tap-time $hold-time pgup home)
	de (tap-hold $tap-time $hold-time pgdn end)
)
